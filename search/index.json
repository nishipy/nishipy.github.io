[{"content":"Note: This article is a translation of 「kubeletのPLEGをソースコード読んで理解したかった」. Kubelet has a lot of components, and one of the most important ones is PLEG, which stands for \u0026ldquo;Pod Lifecycle Event Generator\u0026rdquo;. In this article, we\u0026rsquo;ll look into the implementation to understand how PLEG works.\nNotReady nodes due to \u0026ldquo;PLEG is not healthy\u0026rdquo; In Kubernetes, there are various causes for nodes to become NotReady state. For example, a node may become NotReady with output like PLEG is not healthy: pleg was last seen active 3m20s ago; threshold is 3m0s. PLEG(←?!) was last seen active 3m20s ago; threshold is 3m0s It seems that the last time PLEG(←?!) was active was 3m20s ago; threshold is 3m0s , so it seems that it was judged as abnormal because it exceeded the threshold of 3 minutes. I don\u0026rsquo;t know what it\u0026rsquo;s talking about, what the heck is PLEG\u0026hellip;\nPLEG PLEG is part of kubelet and stands for Pod Lifecycle Event Generator. An overview was found in Concepts in Kubernetes Japanese documentation. Below is its translation with DeepL.\n\u0026gt; Once the desired state is set, the *Kubernetes control plane* using the Pod Lifecycle Event Generator (PLEG) functions to match the current state of the cluster to the desired state. To do so, Kubernetes automatically performs various tasks (e.g., starting or restarting containers, scaling the number of replicas of a particular application, etc.). Okay, that sounds very important. There is an embedded link to PLEG\u0026rsquo;s Design Proposal in this document, but it seems to be out of date and I cannot access it. Apparently, the old Design Proposal has been moved to kubernetes/design-proposals-archive. We can find the PLEG here.\nIt seems to be responsible for talking to Container Runtime and the main loop of kubelet, as shown below.\ncited from: https://github.com/kubernetes/design-proposals-archive/blob/main/node/pod-lifecycle-event-generator.md#overview\nRelisting in PLEG According to the chapter Detect Changes in Container States Via Relisting, it is designed to detect container state changes by a process called \u0026ldquo;relisting\u0026rdquo;.\nPLEG relist all containers periodically to detect container state changes It helps prevent all Pod Workers from polling the container runtime in parallel Therefore only Pod Workers that need Sync will be launched, which is even more efficient Pod Workers FYI, Pod Worker is implemented here. It\u0026rsquo;s also a component of kubelet, and keeps track of operations on pods and ensures each pod is reconciled with the container runtime and other subsystems.\nRuntime Pod Cache We also need to know the Runtime Pod Cache to look into PLEG. The design proposal is here.\ncited from: https://github.com/kubernetes/design-proposals-archive/blob/main/node/runtime-pod-cache.md#runtime-pod-cache\nThe diagram is almost the same as the one we saw for PLEG, but a box named \u0026ldquo;pod cache\u0026rdquo; is added between PLEG and Pod Workers.\nThe Runtime Pod Cache is an in-memory cache that stores the state of all pods and is used to synchronize pods; it is managed by PLEG and acts as a Single Source of Truth (SSOT) for the internal pod status, so that kubelets do not need to directly query the container runtime directly.\nPLEG is responsible for updating the Pod Cache entries, keeping the cache up-to-date at all times. The design seems to be to process in the following order, generating and sending the corresponding Pod Lifecycle Event only when there is a change in the Pod.\nDetect change of container state Inspect the pod for details Update the pod cache with the new PodStatus More information and source code Now that we have understood a little about PLEG, let\u0026rsquo;s look into it in more detail.\nFirst of all, the following article will help a lot to understand it with many diagrams and snippets of source codes. Please note that the information in it is as of Kubernetes 1.14.\nPod Lifecycle Event Generator: Understanding the \u0026ldquo;PLEG is not healthy\u0026rdquo; issue in Kubernetes | Red Hat Developer In the next article\u0026hellip; It might be sufficient to read the above for understanding, but the version of Kubernetes is a little old. Therefore, I\u0026rsquo;ll read the source code of Kubernetes 1.25 in the next.\n","date":"2023-01-28T13:50:47+09:00","image":"https://nishipy.github.io/p/understanding-pleg-with-source-code-part-1/pleg_hu198fe2aa39d96d5ee57c047fcc9cf0ca_184542_120x120_fill_box_smart1_3.png","permalink":"https://nishipy.github.io/p/understanding-pleg-with-source-code-part-1/","title":"Understanding PLEG with source code - Part 1"},{"content":"Note: This article is a translation of 「kindでNodeに割り当てるリソースを定義する」. I posted the original on Dec 18 2020, so some information might be old.\nThere are some famous tools to create local Kubernetes clusters. Kind is one of them. In this post, I introduce the way to allocate compute resources(memory and/or CPU) to nodes of Kind.\nAdjust resources for Docker Desktop When using Kind, each node of a Kubernetes cluster is built as a Docker container. Therefore, first, configure the resources available to Docker in the Docker Desktop settings. Set them to about 4 CPU cores and 8GB of memory, for instance.\nCreate a Kind configuration file Next, we create a configuration file for Kind. You can get a general idea by looking at Configuring Your kind Cluster in the documentation. It is a brief description of the cluster.\nDefine multiple nodes in a cluster For now, we will try to configure one Master and one Worker. All we need to do is to define the list under the nodes.\nkind: Cluster apiVersion: kind.x-k8s.io/v1alpha4 nodes: - role: control-plane - role: worker Define resources for nodes According to this issue, you can define the resource allocation since the Kind cluster is created with kubeadm. However, it does not seem to be a formal method, as you can find a comment like \u0026ldquo;kubelet configuration object is not respected per node in kubeadm currently, only from init\u0026rdquo;.\nkind: Cluster apiVersion: kind.x-k8s.io/v1alpha4 nodes: - role: control-plane kubeadmConfigPatches: - | kind: InitConfiguration nodeRegistration: kubeletExtraArgs: system-reserved: memory=4Gi - role: worker kubeadmConfigPatches: - | kind: JoinConfiguration nodeRegistration: kubeletExtraArgs: system-reserved: memory=4Gi Create a cluster with the configuration file Use --config option to specify the configuration file.\n$ kind create cluster --name=demo --config=$HOME/kind-config.yaml Creating cluster \u0026#34;demo\u0026#34; ... ✓ Ensuring node image (kindest/node:v1.19.1) ✓ Preparing nodes ✓ Writing configuration ✓ Starting control-plane \u0026amp;#xfe0f; ✓ Installing CNI ✓ Installing StorageClass ✓ Joining worker nodes Set kubectl context to \u0026#34;kind-demo\u0026#34; You can now use your cluster with: kubectl cluster-info --context kind-demo Not sure what to do next? Check out \u0026lt;https://kind.sigs.k8s.io/docs/user/quick-start/\u0026gt; Confirm the resource allocation You will see that it is properly allocated with kubectl describe node.\n$ kubectl get node\tNAME STATUS ROLES AGE VERSION\tdemo-control-plane Ready master 76s v1.19.1\tdemo-worker Ready \u0026lt;none\u0026gt; 41s v1.19.1\t$ kubectl describe node demo-control-plane\tName: demo-control-plane\t[...]\tAllocatable:\tcpu: 4\tephemeral-storage: 61255492Ki\thugepages-1Gi: 0\thugepages-2Mi: 0\tmemory: 3958900Ki\tpods: 110\t[...]\t$ kubectl describe node demo-worker\tName: demo-worker\t[...]\tAllocatable:\tcpu: 4\tephemeral-storage: 61255492Ki\thugepages-1Gi: 0\thugepages-2Mi: 0\tmemory: 3958900Ki\tpods: 110\t","date":"2023-01-21T10:51:42+09:00","image":"https://nishipy.github.io/p/resource-allocation-to-kind-nodes/logo_hu3178206b939ba8d9865acabeaf6111f4_85649_120x120_fill_box_smart1_3.png","permalink":"https://nishipy.github.io/p/resource-allocation-to-kind-nodes/","title":"Resource allocation to Kind nodes "},{"content":"I used to write articles on the WordPress-based blog site, but in 2023 I am trying to migrate to Hugo.\nHugo has a variety of great themes, but I\u0026rsquo;ve decided to use the Hugo Theme Stack.\nWhat is Hugo Theme Stack Hugo Theme Stack is a Card-style Hugo theme designed for bloggers, and one of the best Hugo themes I\u0026rsquo;ve ever seen. It has nice designs, a dark/right theme, and so on.\nHowever, if I understand correctly, it doesn\u0026rsquo;t have a feature to add social media share buttons at the moment I wrote this article. Then, I tried to add them at the bottom of the articles.\nSocial Media Share Buttons for a Hugo Website Please find Social Media Share Buttons for a Hugo Website, which is a perfect guide on how to add social media share buttons for the Hugo themes.\nThe original code can be generated with Sharingbuttons.io. In addition, you have to replace the link and text with {{ .Title }} and {{ .Permalink }} if you want to share the page where you are. Here is my example for Twitter.\n\u0026lt;a class=\u0026#34;resp-sharing-button__link\u0026#34; href=\u0026#34;https://twitter.com/intent/tweet/?text={{ .Title }}\u0026amp;amp;url={{ .Permalink }}\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34; aria-label=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;resp-sharing-button resp-sharing-button--twitter resp-sharing-button--small\u0026#34;\u0026gt;\u0026lt;div aria-hidden=\u0026#34;true\u0026#34; class=\u0026#34;resp-sharing-button__icon resp-sharing-button__icon--solid\u0026#34;\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 24 24\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M23.44 4.83c-.8.37-1.5.38-2.22.02.93-.56.98-.96 1.32-2.02-.88.52-1.86.9-2.9 1.1-.82-.88-2-1.43-3.3-1.43-2.5 0-4.55 2.04-4.55 4.54 0 .36.03.7.1 1.04-3.77-.2-7.12-2-9.36-4.75-.4.67-.6 1.45-.6 2.3 0 1.56.8 2.95 2 3.77-.74-.03-1.44-.23-2.05-.57v.06c0 2.2 1.56 4.03 3.64 4.44-.67.2-1.37.2-2.06.08.58 1.8 2.26 3.12 4.25 3.16C5.78 18.1 3.37 18.74 1 18.46c2 1.3 4.4 2.04 6.97 2.04 8.35 0 12.92-6.92 12.92-12.93 0-.2 0-.4-.02-.6.9-.63 1.96-1.22 2.56-2.14z\u0026#34;/\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; Add Social Media Share Buttons for Hugo Theme Stack Referencing the procedures in the previous part, now we can add the buttons for Hugo Theme Stack.\nassets/scss/custom.scss Update custom.scss as follows to support social media share buttons. You just cut and paste the code generated by Sharingbuttons.io.\n// Social media sharing buttons .resp-sharing-button__link, .resp-sharing-button__icon { display: inline-block } .resp-sharing-button__link { text-decoration: none; color: #fff; margin: 0.5em } .resp-sharing-button { border-radius: 5px; transition: 25ms ease-out; padding: 0.5em 0.75em; font-family: Helvetica Neue,Helvetica,Arial,sans-serif } .resp-sharing-button__icon svg { width: 1em; height: 1em; margin-right: 0.4em; vertical-align: top } .resp-sharing-button--small svg { margin: 0; vertical-align: middle } /* Non solid icons get a stroke */ .resp-sharing-button__icon { stroke: #fff; fill: none } /* Solid icons get a fill */ .resp-sharing-button__icon--solid, .resp-sharing-button__icon--solidcircle { fill: #fff; stroke: none } .resp-sharing-button--twitter { background-color: #55acee } .resp-sharing-button--twitter:hover { background-color: #2795e9 } .resp-sharing-button--pinterest { background-color: #bd081c } .resp-sharing-button--pinterest:hover { background-color: #8c0615 } .resp-sharing-button--facebook { background-color: #3b5998 } .resp-sharing-button--facebook:hover { background-color: #2d4373 } .resp-sharing-button--tumblr { background-color: #35465C } .resp-sharing-button--tumblr:hover { background-color: #222d3c } .resp-sharing-button--reddit { background-color: #5f99cf } .resp-sharing-button--reddit:hover { background-color: #3a80c1 } .resp-sharing-button--google { background-color: #dd4b39 } .resp-sharing-button--google:hover { background-color: #c23321 } .resp-sharing-button--linkedin { background-color: #0077b5 } .resp-sharing-button--linkedin:hover { background-color: #046293 } .resp-sharing-button--email { background-color: #777 } .resp-sharing-button--email:hover { background-color: #5e5e5e } .resp-sharing-button--xing { background-color: #1a7576 } .resp-sharing-button--xing:hover { background-color: #114c4c } .resp-sharing-button--whatsapp { background-color: #25D366 } .resp-sharing-button--whatsapp:hover { background-color: #1da851 } .resp-sharing-button--hackernews { background-color: #FF6600 } .resp-sharing-button--hackernews:hover, .resp-sharing-button--hackernews:focus { background-color: #FB6200 } .resp-sharing-button--vk { background-color: #507299 } .resp-sharing-button--vk:hover { background-color: #43648c } .resp-sharing-button--facebook { background-color: #3b5998; border-color: #3b5998; } .resp-sharing-button--facebook:hover, .resp-sharing-button--facebook:active { background-color: #2d4373; border-color: #2d4373; } .resp-sharing-button--twitter { background-color: #55acee; border-color: #55acee; } .resp-sharing-button--twitter:hover, .resp-sharing-button--twitter:active { background-color: #2795e9; border-color: #2795e9; } .resp-sharing-button--linkedin { background-color: #0077b5; border-color: #0077b5; } .resp-sharing-button--linkedin:hover, .resp-sharing-button--linkedin:active { background-color: #046293; border-color: #046293; } .resp-sharing-button--reddit { background-color: #5f99cf; border-color: #5f99cf; } .resp-sharing-button--reddit:hover, .resp-sharing-button--reddit:active { background-color: #3a80c1; border-color: #3a80c1; } assets/scss/partials/layout/article.scss Add the definition of .share-buttons section in .article-footer. Here, it is the same as .article-copyright and .article-lastmod.\n//~~ .article-lastmod, .share-buttons { a { color: var(--body-text-color); } layouts/partials/article/components/share-buttons.html Next, we add a new partial template for share buttons like this. The original one is available at Sharingbuttons.io again. As mentioned above, the link and text are replaced with {{ .Title }} and {{ .Permalink }}.\n\u0026lt;section class=\u0026#34;share-buttons\u0026#34;\u0026gt; \u0026lt;!-- Sharingbutton Twitter --\u0026gt; \u0026lt;a class=\u0026#34;resp-sharing-button__link\u0026#34; href=\u0026#34;https://twitter.com/intent/tweet/?text={{ .Title }}\u0026amp;amp;url={{ .Permalink }}\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34; aria-label=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;resp-sharing-button resp-sharing-button--twitter resp-sharing-button--small\u0026#34;\u0026gt;\u0026lt;div aria-hidden=\u0026#34;true\u0026#34; class=\u0026#34;resp-sharing-button__icon resp-sharing-button__icon--solid\u0026#34;\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 24 24\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M23.44 4.83c-.8.37-1.5.38-2.22.02.93-.56.98-.96 1.32-2.02-.88.52-1.86.9-2.9 1.1-.82-.88-2-1.43-3.3-1.43-2.5 0-4.55 2.04-4.55 4.54 0 .36.03.7.1 1.04-3.77-.2-7.12-2-9.36-4.75-.4.67-.6 1.45-.6 2.3 0 1.56.8 2.95 2 3.77-.74-.03-1.44-.23-2.05-.57v.06c0 2.2 1.56 4.03 3.64 4.44-.67.2-1.37.2-2.06.08.58 1.8 2.26 3.12 4.25 3.16C5.78 18.1 3.37 18.74 1 18.46c2 1.3 4.4 2.04 6.97 2.04 8.35 0 12.92-6.92 12.92-12.93 0-.2 0-.4-.02-.6.9-.63 1.96-1.22 2.56-2.14z\u0026#34;/\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- Sharingbutton Facebook --\u0026gt; \u0026lt;a class=\u0026#34;resp-sharing-button__link\u0026#34; href=\u0026#34;https://facebook.com/sharer/sharer.php?u={{ .Permalink }}\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34; aria-label=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;resp-sharing-button resp-sharing-button--facebook resp-sharing-button--small\u0026#34;\u0026gt;\u0026lt;div aria-hidden=\u0026#34;true\u0026#34; class=\u0026#34;resp-sharing-button__icon resp-sharing-button__icon--solid\u0026#34;\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 24 24\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M18.77 7.46H14.5v-1.9c0-.9.6-1.1 1-1.1h3V.5h-4.33C10.24.5 9.5 3.44 9.5 5.32v2.15h-3v4h3v12h5v-12h3.85l.42-4z\u0026#34;/\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- Sharingbutton LinkedIn --\u0026gt; \u0026lt;a class=\u0026#34;resp-sharing-button__link\u0026#34; href=\u0026#34;https://www.linkedin.com/shareArticle?mini=true\u0026amp;amp;url={{ .Permalink }}\u0026amp;amp;title={{ .Title }}\u0026amp;amp;summary={{ .Title }}\u0026amp;amp;source={{ .Permalink }}\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34; aria-label=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;resp-sharing-button resp-sharing-button--linkedin resp-sharing-button--small\u0026#34;\u0026gt;\u0026lt;div aria-hidden=\u0026#34;true\u0026#34; class=\u0026#34;resp-sharing-button__icon resp-sharing-button__icon--solid\u0026#34;\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 24 24\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M6.5 21.5h-5v-13h5v13zM4 6.5C2.5 6.5 1.5 5.3 1.5 4s1-2.4 2.5-2.4c1.6 0 2.5 1 2.6 2.5 0 1.4-1 2.5-2.6 2.5zm11.5 6c-1 0-2 1-2 2v7h-5v-13h5V10s1.6-1.5 4-1.5c3 0 5 2.2 5 6.3v6.7h-5v-7c0-1-1-2-2-2z\u0026#34;/\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- Sharingbutton Reddit --\u0026gt; \u0026lt;a class=\u0026#34;resp-sharing-button__link\u0026#34; href=\u0026#34;https://reddit.com/submit/?url={{ .Permalink }}\u0026amp;amp;resubmit=true\u0026amp;amp;title={{ .Title }}\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34; aria-label=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;resp-sharing-button resp-sharing-button--reddit resp-sharing-button--small\u0026#34;\u0026gt;\u0026lt;div aria-hidden=\u0026#34;true\u0026#34; class=\u0026#34;resp-sharing-button__icon resp-sharing-button__icon--solid\u0026#34;\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 24 24\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M24 11.5c0-1.65-1.35-3-3-3-.96 0-1.86.48-2.42 1.24-1.64-1-3.75-1.64-6.07-1.72.08-1.1.4-3.05 1.52-3.7.72-.4 1.73-.24 3 .5C17.2 6.3 18.46 7.5 20 7.5c1.65 0 3-1.35 3-3s-1.35-3-3-3c-1.38 0-2.54.94-2.88 2.22-1.43-.72-2.64-.8-3.6-.25-1.64.94-1.95 3.47-2 4.55-2.33.08-4.45.7-6.1 1.72C4.86 8.98 3.96 8.5 3 8.5c-1.65 0-3 1.35-3 3 0 1.32.84 2.44 2.05 2.84-.03.22-.05.44-.05.66 0 3.86 4.5 7 10 7s10-3.14 10-7c0-.22-.02-.44-.05-.66 1.2-.4 2.05-1.54 2.05-2.84zM2.3 13.37C1.5 13.07 1 12.35 1 11.5c0-1.1.9-2 2-2 .64 0 1.22.32 1.6.82-1.1.85-1.92 1.9-2.3 3.05zm3.7.13c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zm9.8 4.8c-1.08.63-2.42.96-3.8.96-1.4 0-2.74-.34-3.8-.95-.24-.13-.32-.44-.2-.68.15-.24.46-.32.7-.18 1.83 1.06 4.76 1.06 6.6 0 .23-.13.53-.05.67.2.14.23.06.54-.18.67zm.2-2.8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm5.7-2.13c-.38-1.16-1.2-2.2-2.3-3.05.38-.5.97-.82 1.6-.82 1.1 0 2 .9 2 2 0 .84-.53 1.57-1.3 1.87z\u0026#34;/\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- Sharingbutton WhatsApp --\u0026gt; \u0026lt;a class=\u0026#34;resp-sharing-button__link\u0026#34; href=\u0026#34;whatsapp://send?text={{ .Title }}%20{{ .Permalink }}\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34; aria-label=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;resp-sharing-button resp-sharing-button--whatsapp resp-sharing-button--small\u0026#34;\u0026gt;\u0026lt;div aria-hidden=\u0026#34;true\u0026#34; class=\u0026#34;resp-sharing-button__icon resp-sharing-button__icon--solid\u0026#34;\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 24 24\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M20.1 3.9C17.9 1.7 15 .5 12 .5 5.8.5.7 5.6.7 11.9c0 2 .5 3.9 1.5 5.6L.6 23.4l6-1.6c1.6.9 3.5 1.3 5.4 1.3 6.3 0 11.4-5.1 11.4-11.4-.1-2.8-1.2-5.7-3.3-7.8zM12 21.4c-1.7 0-3.3-.5-4.8-1.3l-.4-.2-3.5 1 1-3.4L4 17c-1-1.5-1.4-3.2-1.4-5.1 0-5.2 4.2-9.4 9.4-9.4 2.5 0 4.9 1 6.7 2.8 1.8 1.8 2.8 4.2 2.8 6.7-.1 5.2-4.3 9.4-9.5 9.4zm5.1-7.1c-.3-.1-1.7-.9-1.9-1-.3-.1-.5-.1-.7.1-.2.3-.8 1-.9 1.1-.2.2-.3.2-.6.1s-1.2-.5-2.3-1.4c-.9-.8-1.4-1.7-1.6-2-.2-.3 0-.5.1-.6s.3-.3.4-.5c.2-.1.3-.3.4-.5.1-.2 0-.4 0-.5C10 9 9.3 7.6 9 7c-.1-.4-.4-.3-.5-.3h-.6s-.4.1-.7.3c-.3.3-1 1-1 2.4s1 2.8 1.1 3c.1.2 2 3.1 4.9 4.3.7.3 1.2.5 1.6.6.7.2 1.3.2 1.8.1.6-.1 1.7-.7 1.9-1.3.2-.7.2-1.2.2-1.3-.1-.3-.3-.4-.6-.5z\u0026#34;/\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/section\u0026gt; layouts/partials/article/components/footer.html In the end, add the partial template to footer.html for article pages.\n// ~~ \u0026lt;!-- Social media share buttons --\u0026gt; {{ partial \u0026#34;article/components/share-buttons\u0026#34; . }} \u0026lt;/footer\u0026gt; Now we have social media share buttons on the footer of articles! They are displayed below, right?\n","date":"2023-01-14T12:04:42+09:00","image":"https://nishipy.github.io/p/social-media-share-buttons-for-hugo-theme-stack/share-buttons_hu81c5837a67928c7bc03997a4103c9301_18652_120x120_fill_q75_box_smart1.jpg","permalink":"https://nishipy.github.io/p/social-media-share-buttons-for-hugo-theme-stack/","title":"Social Media Share Buttons for Hugo Theme Stack"},{"content":"見逃さない人 おそろしく速い手刀、オレでなきゃ見逃しちゃうね\nA person who does not miss that Such terrifying speed. No one except me could have seen that. ","date":"2023-01-09T12:47:43+09:00","permalink":"https://nishipy.github.io/p/hello-world/","title":"Hello World"}]